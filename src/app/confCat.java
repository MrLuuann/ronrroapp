/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package app;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Uriel
 */
public class confCat extends javax.swing.JFrame {
    
    /**
     * Creates new form confCat
     */
    public confCat() {
        initComponents();
    }
    
    public void UpInfo(){
        /*
        Este metodo actualiza la informacion de las listas mostradas en la interfaz, primero las limpia por si tiene algun valor
        */
        cBxNcat.removeAllItems();
        cBxUpNiv.removeAllItems();
        cBxDelNi.removeAllItems();
        cBxUpCat.removeAllItems();
        cBxDelCat.removeAllItems();
        /*
        Inicia la conexion
        */
        Connection cn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        try
        {
            /*
            Crea la variable para contar cuantos niveles existen
            */
            int nNiveles;
            cn = conexion.conectar();
            String sql = "SELECT COUNT(*) FROM niveles;";
            /*
            Se hace la consulta y se almacena
            */
            pst = cn.prepareStatement(sql);
            rs = pst.executeQuery();
            rs.next();
            
            nNiveles = rs.getInt("COUNT(*)");
            /*
            Genera una consulta de todos los niveles
            */
            String sql1 = "SELECT num_nivel FROM niveles";
            pst = cn.prepareStatement(sql1);
            rs = pst.executeQuery();
            /*
            Imprime los niveles en las listas de item correspondientes
            */
            for(int i = 0; i < nNiveles; i++)
            {
                rs.next();
                
                cBxNcat.addItem(rs.getString("num_nivel"));
                cBxUpNiv.addItem(rs.getString("num_nivel"));
                cBxDelNi.addItem(rs.getString("num_nivel"));
            }
            /*
            Crea la variable para contar cuantas categorias existen
            */
            int nCategorias;
            String sql2 = "SELECT COUNT(*) FROM categorias;";
            
            pst = cn.prepareStatement(sql2);
            rs = pst.executeQuery();
            rs.next();
            /*
            Se hace la consulta y se almacena
            */
            nCategorias = rs.getInt("COUNT(*)");
            /*
            Genera una consulta de todos las categorias
            */
            String sql3 = "SELECT nom_categoria FROM categorias";
            pst = cn.prepareStatement(sql3);
            rs = pst.executeQuery();
            /*
            Imprime las categorias en las listas de item correspondientes
            */
            for(int i = 0; i < nCategorias; i++)
            {
                rs.next();
                
                cBxUpCat.addItem(rs.getString("nom_categoria"));
                cBxDelCat.addItem(rs.getString("nom_categoria"));
            }
            
           
        }
        catch(SQLException e)
        {
            
            JOptionPane.showMessageDialog(null,"Error: " +e);
            
        }
        
        finally
        {
            try
            {
                /*
                Se cierra la conexion
                */
                if (rs != null) rs.close();
                
                if (pst != null) pst.close();
                
                if (cn != null) cn.close();
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        delNiv = new javax.swing.JButton();
        upNiv = new javax.swing.JButton();
        addNiv = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNn = new javax.swing.JTextField();
        addCat = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNcat = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cBxUpNiv = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtUpN = new javax.swing.JTextField();
        upCat = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cBxUpCat = new javax.swing.JComboBox<>();
        txtUpCa = new javax.swing.JTextField();
        cBxNcat = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        delCat = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        cBxDelNi = new javax.swing.JComboBox<>();
        cBxDelCat = new javax.swing.JComboBox<>();
        btnHome = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Bodoni MT Black", 0, 36)); // NOI18N
        jLabel1.setText("Configuraci√≥n");

        jPanel2.setBackground(new java.awt.Color(255, 255, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 51));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 86, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 51));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 86, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 51));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        delNiv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/basura.png"))); // NOI18N
        delNiv.setBorder(null);
        delNiv.setContentAreaFilled(false);
        delNiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delNivActionPerformed(evt);
            }
        });

        upNiv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/recargar.png"))); // NOI18N
        upNiv.setBorder(null);
        upNiv.setContentAreaFilled(false);
        upNiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upNivActionPerformed(evt);
            }
        });

        addNiv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton-mas.png"))); // NOI18N
        addNiv.setBorder(null);
        addNiv.setContentAreaFilled(false);
        addNiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNivActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Britannic Bold", 0, 14)); // NOI18N
        jLabel2.setText("Add nivel");

        jLabel3.setText("Nombre del nivel:");

        txtNn.setText("Nivel");

        addCat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton-mas.png"))); // NOI18N
        addCat.setBorder(null);
        addCat.setContentAreaFilled(false);
        addCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCatActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Britannic Bold", 0, 14)); // NOI18N
        jLabel4.setText("Add categoria");

        jLabel5.setText("Nombre de la categoria:");

        txtNcat.setText("Categoria");

        jLabel6.setFont(new java.awt.Font("Britannic Bold", 0, 14)); // NOI18N
        jLabel6.setText("Edit nivel");

        jLabel7.setText("Nuevo nombre:");

        txtUpN.setText("Nivel");

        upCat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/recargar.png"))); // NOI18N
        upCat.setBorder(null);
        upCat.setContentAreaFilled(false);
        upCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upCatActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Britannic Bold", 0, 14)); // NOI18N
        jLabel8.setText("Edit categoria");

        jLabel9.setText("Nuevo nombre:");

        txtUpCa.setText("Categoria");

        cBxNcat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBxNcatActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Britannic Bold", 0, 14)); // NOI18N
        jLabel10.setText("Delete nivel");

        delCat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/basura.png"))); // NOI18N
        delCat.setBorder(null);
        delCat.setContentAreaFilled(false);
        delCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delCatActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Britannic Bold", 0, 14)); // NOI18N
        jLabel11.setText("Delete categoria");

        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Recurso 1.png"))); // NOI18N
        btnHome.setBorder(null);
        btnHome.setContentAreaFilled(false);
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar-sesion.png"))); // NOI18N
        btnExit.setBorder(null);
        btnExit.setContentAreaFilled(false);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(delNiv)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(upCat)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addGap(0, 0, Short.MAX_VALUE)
                                            .addComponent(jLabel9))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel10)
                                                .addComponent(jLabel8))
                                            .addGap(0, 0, Short.MAX_VALUE))))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(upNiv)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(addCat)
                                        .addComponent(addNiv))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel3))
                                        .addComponent(jLabel4))))
                            .addComponent(delCat)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel11)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtUpN)
                    .addComponent(txtNn)
                    .addComponent(txtNcat, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(cBxUpNiv, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtUpCa, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cBxUpCat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cBxNcat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cBxDelNi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cBxDelCat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnHome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnExit)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnExit)
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1))
                    .addComponent(btnHome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtNn)
                        .addComponent(addNiv)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(addCat))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(cBxNcat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtNcat, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(cBxUpNiv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUpN)
                            .addComponent(jLabel7)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(upNiv)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(upCat)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel8)))
                        .addGap(66, 66, 66)
                        .addComponent(delNiv))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cBxUpCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtUpCa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(cBxDelNi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(delCat)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(cBxDelCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        /*
        Este boton se regresa al login si se ha equivocado o cualquier cosa
        */
        login l = new login();
        l.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        editBD eBD = new editBD();
        eBD.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void addNivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNivActionPerformed
        /*
        Se inicializan las variables para iniciar la conexion
        */
        Connection cn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        try
        {
            /*
            Se optiene y almacena que nivel ha seleccionado
            */
            String nNivel;
            nNivel = txtNn.getText();
            /*
            Se compara que el campo no este vacio
            */
            if(!"".equals(nNivel)){
                /*
                Se hace la conexion y se hace la insercion de datos 
                */
                cn = conexion.conectar();
                String sql = "INSERT INTO niveles(num_nivel) VALUES ('" +nNivel+ "');";

                pst = cn.prepareStatement(sql);
                pst.executeUpdate();
                /*
                Se muestra el mensaje de datos insertados y se actualizan las listas
                */
                JOptionPane.showMessageDialog(null, "Nivel agregado correctamente");
                UpInfo();
            }else{
                JOptionPane.showMessageDialog(null, "Algin campo esta vacio");
            }
            
           
        }
        catch(SQLException e)
        {
            
            JOptionPane.showMessageDialog(null,"Error: " +e);
            
        }
        
        finally
        {
            try
            {
                /*
                Se cierra la conexion
                */
                if (rs != null) rs.close();
                
                if (pst != null) pst.close();
                
                if (cn != null) cn.close();
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_addNivActionPerformed

    private void cBxNcatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBxNcatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cBxNcatActionPerformed

    private void addCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCatActionPerformed
        /*
        Se inicializan las variables para la conexion
        */
        Connection cn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        try
        {
            String itemSel;
            int idNvl;
            itemSel = String.valueOf(cBxNcat.getSelectedItem());
            /*
            Se busca cual es el id del item seleccionado
            */
            cn = conexion.conectar();
            String sql = "SELECT id_nivel FROM niveles WHERE num_nivel='" +itemSel+ "';";
            pst = cn.prepareStatement(sql);
            rs = pst.executeQuery();
            rs.next();
            
            idNvl = rs.getInt("id_nivel");
                
            String nCat;
            nCat = txtNcat.getText();
            /*
            Se compara que el campo de texto no este vacio
            */
            if(!"".equals(nCat)){
                /*
                Se insertan los datos
                */
                String sql2 = "INSERT INTO categorias(nom_categoria, id_nivel ) VALUES ('" +nCat+ "', '" +idNvl+ "');";

                pst = cn.prepareStatement(sql2);
                pst.executeUpdate();
                /*
                Se muestra el mensaje de datos insertados y se actualizan las listas
                */
                JOptionPane.showMessageDialog(null, "Categoria agregada correctamente");
                UpInfo();
            }else{
                JOptionPane.showMessageDialog(null, "Algin campo esta vacio");
            }
        }
        catch(SQLException e)
        {
            
            JOptionPane.showMessageDialog(null,"Error: " +e);
            
        }
        
        finally
        {
            try
            {
                if (rs != null) rs.close();
                
                if (pst != null) pst.close();
                
                if (cn != null) cn.close();
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_addCatActionPerformed

    private void upNivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upNivActionPerformed
        /*
        Se inicializan las variables para la conexion
        */
        Connection cn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        try
        {
            /*
            Se identifica el item seleccionado
            */
            String itemSel;
            itemSel = String.valueOf(cBxUpNiv.getSelectedItem());
            cn = conexion.conectar();
            /*
            Se compara que el campo de texto no este vacio
            */
            if(!"".equals(txtUpN.getText())){
                String sql = "UPDATE niveles SET num_nivel='" +txtUpN.getText()+ "' WHERE num_nivel='" +itemSel+ "';";

                pst = cn.prepareStatement(sql);
                pst.executeUpdate();
                /*
                Muestra mensaje de Nivel actualizado
                */
                JOptionPane.showMessageDialog(null, "Nivel actualizado");
                UpInfo();
            }
            
           
        }
        catch(SQLException e)
        {
            
            JOptionPane.showMessageDialog(null,"Error: " +e);
            
        }
        
        finally
        {
            try
            {
                if (rs != null) rs.close();
                
                if (pst != null) pst.close();
                
                if (cn != null) cn.close();
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_upNivActionPerformed

    private void upCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upCatActionPerformed
        /*
        Se inicializan las variables para la conexion
        */
        Connection cn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        try
        {
            /*
            Identifica el item seleccionado
            */
            String itemSel;
            itemSel = String.valueOf(cBxUpCat.getSelectedItem());
            cn = conexion.conectar();
            /*
            verifica que no este vacio
            */
            if(!"".equals(txtUpCa.getText())){
                /*
                Actualiza los datos
                */
                String sql = "UPDATE categorias SET nom_categoria ='" +txtUpCa.getText()+ "' WHERE nom_categoria ='" +itemSel+ "';";

                pst = cn.prepareStatement(sql);
                pst.executeUpdate();
                /*
                Confirma la accion y se actualizan listas
                */
                JOptionPane.showMessageDialog(null, "Categoria actualizado");
                UpInfo();
            }else{
                JOptionPane.showMessageDialog(null, "Algun de los datos esta vacio");
            }
            
           
        }
        catch(SQLException e)
        {
            
            JOptionPane.showMessageDialog(null,"Error: " +e);
            
        }
        
        finally
        {
            try
            {
                if (rs != null) rs.close();
                
                if (pst != null) pst.close();
                
                if (cn != null) cn.close();
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_upCatActionPerformed

    private void delNivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delNivActionPerformed
        /*
        Se inicializan las variables para la conexion
        */
        Connection cn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        try
        {
            /*
            Se identifica el item seleccionado
            */
            String itemSel;
            itemSel = String.valueOf(cBxDelNi.getSelectedItem());
            cn = conexion.conectar();
            /*
            Se borra el dato seleccionado
            */
            String sql = "DELETE FROM niveles WHERE num_nivel ='" +itemSel+ "';";
            
            pst = cn.prepareStatement(sql);
            pst.executeUpdate();
            /*
            Se manda mensaje de confirmacion y se actualizan listas
            */
            JOptionPane.showMessageDialog(null, "Nivel eliminado");
            UpInfo();
           
        }
        catch(SQLException e)
        {
            
            JOptionPane.showMessageDialog(null,"Error: " +e);
            
        }
        
        finally
        {
            try
            {
                if (rs != null) rs.close();
                
                if (pst != null) pst.close();
                
                if (cn != null) cn.close();
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_delNivActionPerformed

    private void delCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delCatActionPerformed
        /*
        Se inicializan las variables para la conexion
        */
        Connection cn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        try
        {
            /*
            Se identifica el item seleccionado
            */
            String itemSel;
            itemSel = String.valueOf(cBxDelCat.getSelectedItem());
            cn = conexion.conectar();
            /*
            Se ejecuta la instruccion de borrar
            */
            String sql = "DELETE FROM categorias WHERE nom_categoria ='" +itemSel+ "';";
            
            pst = cn.prepareStatement(sql);
            pst.executeUpdate();
            /*
            Se manda mensaje de confirmacion y se actualizan listas
            */
            JOptionPane.showMessageDialog(null, "Categoria eliminado");
            UpInfo();
           
        }
        catch(SQLException e)
        {
            
            JOptionPane.showMessageDialog(null,"Hubo algun error" +e);
            
        }
        
        finally
        {
            try
            {
                if (rs != null) rs.close();
                
                if (pst != null) pst.close();
                
                if (cn != null) cn.close();
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_delCatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(confCat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(confCat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(confCat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(confCat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new confCat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCat;
    private javax.swing.JButton addNiv;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnHome;
    private javax.swing.JComboBox<String> cBxDelCat;
    private javax.swing.JComboBox<String> cBxDelNi;
    private javax.swing.JComboBox<String> cBxNcat;
    private javax.swing.JComboBox<String> cBxUpCat;
    private javax.swing.JComboBox<String> cBxUpNiv;
    private javax.swing.JButton delCat;
    private javax.swing.JButton delNiv;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField txtNcat;
    private javax.swing.JTextField txtNn;
    private javax.swing.JTextField txtUpCa;
    private javax.swing.JTextField txtUpN;
    private javax.swing.JButton upCat;
    private javax.swing.JButton upNiv;
    // End of variables declaration//GEN-END:variables
}
